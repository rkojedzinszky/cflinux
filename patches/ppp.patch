diff -ru ppp.orig/pppd/main.c ppp-cvs-20050725/pppd/main.c
--- ppp.orig/pppd/main.c	2005-07-12 03:07:59.000000000 +0200
+++ ppp-cvs-20050725/pppd/main.c	2005-07-26 00:02:20.000000000 +0200
@@ -1245,9 +1245,9 @@
 
     slprintf(numbuf, sizeof(numbuf), "%u", link_connect_time);
     script_setenv("CONNECT_TIME", numbuf, 0);
-    slprintf(numbuf, sizeof(numbuf), "%u", link_stats.bytes_out);
+    snprintf(numbuf, sizeof(numbuf), "%llu", link_stats.bytes_out);
     script_setenv("BYTES_SENT", numbuf, 0);
-    slprintf(numbuf, sizeof(numbuf), "%u", link_stats.bytes_in);
+    snprintf(numbuf, sizeof(numbuf), "%llu", link_stats.bytes_in);
     script_setenv("BYTES_RCVD", numbuf, 0);
 }
 
@@ -1558,6 +1558,16 @@
 	tdb_close(pppdb);
 #endif
 
+	closelog();
+	if (log_to_fd > 2)
+		close(log_to_fd);
+	if (the_channel->close)
+		(*the_channel->close)();
+	else
+		close(devfd);	/* some plugins don't have a close function */
+	close(fd_ppp);
+	close(fd_devnull);
+
 	/* make sure infd, outfd and errfd won't get tromped on below */
 	if (infd == 1 || infd == 2)
 		infd = dup(infd);
@@ -1574,15 +1584,6 @@
 	if (errfd != 2)
 		dup2(errfd, 2);
 
-	closelog();
-	if (log_to_fd > 2)
-		close(log_to_fd);
-	if (the_channel->close)
-		(*the_channel->close)();
-	else
-		close(devfd);	/* some plugins don't have a close function */
-	close(fd_ppp);
-	close(fd_devnull);
 	if (infd != 0)
 		close(infd);
 	if (outfd != 1)
Only in ppp-cvs-20050725/pppd: main.c.orig
diff -ru ppp.orig/pppd/Makefile.linux ppp-cvs-20050725/pppd/Makefile.linux
--- ppp.orig/pppd/Makefile.linux	2005-07-12 03:50:23.000000000 +0200
+++ ppp-cvs-20050725/pppd/Makefile.linux	2005-07-26 00:02:20.000000000 +0200
@@ -48,19 +48,19 @@
 # Uncomment the next line to include support for PPP packet filtering.
 # This requires that the libpcap library and headers be installed
 # and that the kernel driver support PPP packet filtering.
-FILTER=y
+#FILTER=y
 
 # Uncomment the next line to enable multilink PPP (enabled by default)
 # Linux distributions: Please leave multilink ENABLED in your builds
 # of pppd!
-HAVE_MULTILINK=y
+#HAVE_MULTILINK=y
 
 # Uncomment the next line to enable the TDB database (enabled by default.)
 # If you enable multilink, then TDB is automatically enabled also.
 # Linux distributions: Please leave TDB ENABLED in your builds.
-USE_TDB=y
+#USE_TDB=y
 
-HAS_SHADOW=y
+#HAS_SHADOW=y
 #USE_PAM=y
 #HAVE_INET6=y
 
diff -ru ppp.orig/pppd/pathnames.h ppp-cvs-20050725/pppd/pathnames.h
--- ppp.orig/pppd/pathnames.h	2005-07-10 13:19:10.000000000 +0200
+++ ppp-cvs-20050725/pppd/pathnames.h	2005-07-26 00:02:20.000000000 +0200
@@ -56,7 +56,7 @@
 
 #ifdef PLUGIN
 #ifdef __STDC__
-#define _PATH_PLUGIN	DESTDIR "/lib/pppd/" VERSION
+#define _PATH_PLUGIN	DESTDIR "/lib/pppd/"
 #else /* __STDC__ */
 #define _PATH_PLUGIN	"/usr/lib/pppd"
 #endif /* __STDC__ */
diff -ru ppp.orig/pppd/plugins/radius/avpair.c ppp-cvs-20050725/pppd/plugins/radius/avpair.c
--- ppp.orig/pppd/plugins/radius/avpair.c	2004-11-14 08:26:26.000000000 +0100
+++ ppp-cvs-20050725/pppd/plugins/radius/avpair.c	2005-07-26 00:02:20.000000000 +0200
@@ -291,9 +291,17 @@
     /* Set attrlen to length of data */
     attrlen -= 4;
     for (; attrlen; attrlen -= vlen+2, ptr += vlen) {
-	vtype = *ptr++;
-	vlen = *ptr++;
-	vlen -= 2;
+	if ( vendor_id == VENDOR_USR ) {
+		vlen = attrlen - 4;
+		vtype = (ptr[0] << 24) | (ptr[1] << 16) | (ptr[2] << 8) | ptr[3];
+		ptr += 4;
+		/* fixup */
+		attrlen -= 2;
+	} else {
+		vtype = *ptr++;
+		vlen = *ptr++;
+		vlen -= 2;
+	}
 	if (vlen < 0 || vlen > attrlen - 2) {
 	    /* Do not log an error.  We are supposed to be able to cope with
 	       arbitrary vendor-specific gunk */
diff -ru ppp.orig/pppd/plugins/radius/radius.c ppp-cvs-20050725/pppd/plugins/radius/radius.c
--- ppp.orig/pppd/plugins/radius/radius.c	2005-07-10 12:28:55.000000000 +0200
+++ ppp-cvs-20050725/pppd/plugins/radius/radius.c	2005-07-26 00:02:20.000000000 +0200
@@ -963,20 +963,43 @@
 
 
     if (link_stats_valid) {
+ 	DICT_ATTR*	attr;
+ 	static char	bigint[64];
+ 	
 	av_type = link_connect_time;
 	rc_avpair_add(&send, PW_ACCT_SESSION_TIME, &av_type, 0, VENDOR_NONE);
 
-	av_type = link_stats.bytes_out;
-	rc_avpair_add(&send, PW_ACCT_OUTPUT_OCTETS, &av_type, 0, VENDOR_NONE);
-
-	av_type = link_stats.bytes_in;
-	rc_avpair_add(&send, PW_ACCT_INPUT_OCTETS, &av_type, 0, VENDOR_NONE);
-
-	av_type = link_stats.pkts_out;
-	rc_avpair_add(&send, PW_ACCT_OUTPUT_PACKETS, &av_type, 0, VENDOR_NONE);
-
-	av_type = link_stats.pkts_in;
-	rc_avpair_add(&send, PW_ACCT_INPUT_PACKETS, &av_type, 0, VENDOR_NONE);
+ 	if ( (attr=rc_dict_findattr("Acct-Output-Octets-64")) ) {
+ 		snprintf(bigint,sizeof(bigint),"%llu",link_stats.bytes_out);
+ 		rc_avpair_add(&send,attr->value,bigint,0,attr->vendorcode);
+ 	} else {
+ 		av_type = link_stats.bytes_out;
+ 		rc_avpair_add(&send, PW_ACCT_OUTPUT_OCTETS, &av_type, 0, VENDOR_NONE);
+ 	}
+  
+ 	if ( (attr=rc_dict_findattr("Acct-Input-Octets-64")) ) {
+ 		snprintf(bigint,sizeof(bigint),"%llu",link_stats.bytes_in);
+ 		rc_avpair_add(&send,attr->value,bigint,0,attr->vendorcode);
+ 	} else {
+ 		av_type = link_stats.bytes_in;
+ 		rc_avpair_add(&send, PW_ACCT_INPUT_OCTETS, &av_type, 0, VENDOR_NONE);
+ 	}
+  
+ 	if ( (attr=rc_dict_findattr("Acct-Output-Packets-64")) ) {
+ 		snprintf(bigint,sizeof(bigint),"%llu",link_stats.pkts_out);
+ 		rc_avpair_add(&send,attr->value,bigint,0,attr->vendorcode);
+ 	} else {
+ 		av_type = link_stats.pkts_out;
+ 		rc_avpair_add(&send, PW_ACCT_OUTPUT_PACKETS, &av_type, 0, VENDOR_NONE);
+ 	}
+ 
+ 	if ( (attr=rc_dict_findattr("Acct-Input-Packets-64")) ) {
+ 		snprintf(bigint,sizeof(bigint),"%llu",link_stats.pkts_in);
+ 		rc_avpair_add(&send,attr->value,bigint,0,attr->vendorcode);
+ 	} else {
+ 		av_type = link_stats.pkts_in;
+ 		rc_avpair_add(&send, PW_ACCT_INPUT_PACKETS, &av_type, 0, VENDOR_NONE);
+ 	}
     }
 
     if (*remote_number) {
@@ -1105,22 +1128,45 @@
     update_link_stats(0);
 
     if (link_stats_valid) {
+ 	DICT_ATTR*	attr;
+ 	static char	bigint[64];
+ 	
 	link_stats_valid = 0; /* Force later code to update */
 
 	av_type = link_connect_time;
 	rc_avpair_add(&send, PW_ACCT_SESSION_TIME, &av_type, 0, VENDOR_NONE);
 
-	av_type = link_stats.bytes_out;
-	rc_avpair_add(&send, PW_ACCT_OUTPUT_OCTETS, &av_type, 0, VENDOR_NONE);
-
-	av_type = link_stats.bytes_in;
-	rc_avpair_add(&send, PW_ACCT_INPUT_OCTETS, &av_type, 0, VENDOR_NONE);
-
-	av_type = link_stats.pkts_out;
-	rc_avpair_add(&send, PW_ACCT_OUTPUT_PACKETS, &av_type, 0, VENDOR_NONE);
-
-	av_type = link_stats.pkts_in;
-	rc_avpair_add(&send, PW_ACCT_INPUT_PACKETS, &av_type, 0, VENDOR_NONE);
+ 	if ( (attr=rc_dict_findattr("Acct-Output-Octets-64")) ) {
+ 		snprintf(bigint,sizeof(bigint),"%llu",link_stats.bytes_out);
+ 		rc_avpair_add(&send,attr->value,bigint,0,attr->vendorcode);
+ 	} else {
+ 		av_type = link_stats.bytes_out;
+ 		rc_avpair_add(&send, PW_ACCT_OUTPUT_OCTETS, &av_type, 0, VENDOR_NONE);
+ 	}
+  
+ 	if ( (attr=rc_dict_findattr("Acct-Input-Octets-64")) ) {
+ 		snprintf(bigint,sizeof(bigint),"%llu",link_stats.bytes_in);
+ 		rc_avpair_add(&send,attr->value,bigint,0,attr->vendorcode);
+ 	} else {
+ 		av_type = link_stats.bytes_in;
+ 		rc_avpair_add(&send, PW_ACCT_INPUT_OCTETS, &av_type, 0, VENDOR_NONE);
+ 	}
+  
+ 	if ( (attr=rc_dict_findattr("Acct-Output-Packets-64")) ) {
+ 		snprintf(bigint,sizeof(bigint),"%llu",link_stats.pkts_out);
+ 		rc_avpair_add(&send,attr->value,bigint,0,attr->vendorcode);
+ 	} else {
+ 		av_type = link_stats.pkts_out;
+ 		rc_avpair_add(&send, PW_ACCT_OUTPUT_PACKETS, &av_type, 0, VENDOR_NONE);
+ 	}
+  
+ 	if ( (attr=rc_dict_findattr("Acct-Input-Packets-64")) ) {
+ 		snprintf(bigint,sizeof(bigint),"%llu",link_stats.pkts_in);
+ 		rc_avpair_add(&send,attr->value,bigint,0,attr->vendorcode);
+ 	} else {
+ 		av_type = link_stats.pkts_in;
+ 		rc_avpair_add(&send, PW_ACCT_INPUT_PACKETS, &av_type, 0, VENDOR_NONE);
+ 	}
     }
 
     if (*remote_number) {
diff -ru ppp.orig/pppd/plugins/radius/radiusclient.h ppp-cvs-20050725/pppd/plugins/radius/radiusclient.h
--- ppp.orig/pppd/plugins/radius/radiusclient.h	2004-11-14 08:26:26.000000000 +0100
+++ ppp-cvs-20050725/pppd/plugins/radius/radiusclient.h	2005-07-26 00:02:20.000000000 +0200
@@ -292,6 +292,7 @@
 /* Vendor codes */
 #define VENDOR_NONE     (-1)
 #define VENDOR_MICROSOFT	311
+#define VENDOR_USR		429
 
 /* Server data structures */
 
Only in ppp-cvs-20050725/pppd/plugins/radius: radius.c.orig
diff -ru ppp.orig/pppd/plugins/radius/sendserver.c ppp-cvs-20050725/pppd/plugins/radius/sendserver.c
--- ppp.orig/pppd/plugins/radius/sendserver.c	2004-11-14 08:26:26.000000000 +0100
+++ ppp-cvs-20050725/pppd/plugins/radius/sendserver.c	2005-07-26 00:02:20.000000000 +0200
@@ -56,6 +56,13 @@
 		*buf++ = (((unsigned int) vp->vendorcode) >> 8) & 255;
 		*buf++ = ((unsigned int) vp->vendorcode) & 255;
 
+		/* Stolen from freeradius's source, that USR vendor
+		 * attributes are to handled otherwise */
+		if ( vp->vendorcode == VENDOR_USR ) {
+			*buf++ = (vp->attribute >> 24) & 0xff;
+			*buf++ = (vp->attribute >> 16) & 0xff;
+			*buf++ = (vp->attribute >> 8) & 0xff;
+		}
 		/* Insert vendor-type */
 		*buf++ = vp->attribute;
 
@@ -64,7 +71,8 @@
 		case PW_TYPE_STRING:
 		    length = vp->lvalue;
 		    *lenptr = length + 8;
-		    *buf++ = length+2;
+		    if ( vp->vendorcode != VENDOR_USR )
+			*buf++ = length+2;
 		    memcpy(buf, vp->strvalue, (size_t) length);
 		    buf += length;
 		    total_length += length+8;
@@ -73,7 +81,8 @@
 		case PW_TYPE_IPADDR:
 		    length = sizeof(UINT4);
 		    *lenptr = length + 8;
-		    *buf++ = length+2;
+		    if ( vp->vendorcode != VENDOR_USR )
+			*buf++ = length+2;
 		    lvalue = htonl(vp->lvalue);
 		    memcpy(buf, (char *) &lvalue, sizeof(UINT4));
 		    buf += length;
@@ -82,6 +91,10 @@
 		default:
 		    break;
 		}
+		if ( vp->vendorcode == VENDOR_USR ) {
+		    *lenptr += 2;
+		    total_length += 2;
+		}
 	    } else {
 		*buf++ = vp->attribute;
 		switch (vp->attribute) {
diff -ru ppp.orig/pppd/pppd.h ppp-cvs-20050725/pppd/pppd.h
--- ppp.orig/pppd/pppd.h	2005-07-12 03:07:59.000000000 +0200
+++ ppp-cvs-20050725/pppd/pppd.h	2005-07-26 00:02:20.000000000 +0200
@@ -170,10 +170,10 @@
  * pppd needs.
  */
 struct pppd_stats {
-    unsigned int	bytes_in;
-    unsigned int	bytes_out;
-    unsigned int	pkts_in;
-    unsigned int	pkts_out;
+    unsigned long long	bytes_in;
+    unsigned long long	bytes_out;
+    unsigned long long	pkts_in;
+    unsigned long long	pkts_out;
 };
 
 /* Used for storing a sequence of words.  Usually malloced. */
diff -ru ppp.orig/pppd/sys-linux.c ppp-cvs-20050725/pppd/sys-linux.c
--- ppp.orig/pppd/sys-linux.c	2005-03-22 11:27:07.000000000 +0100
+++ ppp-cvs-20050725/pppd/sys-linux.c	2005-07-26 00:02:20.000000000 +0200
@@ -1332,6 +1332,10 @@
  *
  * get_ppp_stats - return statistics for the link.
  */
+
+static struct ifpppstatsreq prev_stat_req;
+static struct pppd_stats static_stats;
+
 int
 get_ppp_stats(u, stats)
     int u;
@@ -1347,10 +1351,21 @@
 	error("Couldn't get PPP statistics: %m");
 	return 0;
     }
-    stats->bytes_in = req.stats.p.ppp_ibytes;
-    stats->bytes_out = req.stats.p.ppp_obytes;
-    stats->pkts_in = req.stats.p.ppp_ipackets;
-    stats->pkts_out = req.stats.p.ppp_opackets;
+    // Calculate the elapsed bytes since the last query
+    static_stats.bytes_in +=
+	    (req.stats.p.ppp_ibytes - prev_stat_req.stats.p.ppp_ibytes);
+    static_stats.bytes_out +=
+	    (req.stats.p.ppp_obytes - prev_stat_req.stats.p.ppp_obytes);
+    static_stats.pkts_in +=
+	    (req.stats.p.ppp_ipackets - prev_stat_req.stats.p.ppp_ipackets);
+    static_stats.pkts_out +=
+	    (req.stats.p.ppp_opackets - prev_stat_req.stats.p.ppp_opackets);
+    // Store the current state
+    memcpy(&prev_stat_req,&req,sizeof(prev_stat_req));
+
+    // Give out the statistics
+    memcpy(stats,&static_stats,sizeof(static_stats));
+
     return 1;
 }
 
@@ -2240,6 +2255,11 @@
 {
     struct ifreq ifr;
 
+    // Initialize the 'previous stats struct'
+    memset(&prev_stat_req,0,sizeof(prev_stat_req));
+    // And the static statistics puffer
+    memset(&static_stats,0,sizeof(static_stats));
+    
     memset (&ifr, '\0', sizeof (ifr));
     strlcpy(ifr.ifr_name, ifname, sizeof (ifr.ifr_name));
     if (ioctl(sock_fd, SIOCGIFFLAGS, (caddr_t) &ifr) < 0) {
--- ppp-cvs-20050725/pppd/plugins/rp-pppoe/plugin.c.orig	Tue Jul 26 00:36:02 2005
+++ ppp-cvs-20050725/pppd/plugins/rp-pppoe/plugin.c	Tue Jul 26 00:36:38 2005
@@ -187,8 +187,8 @@
 		int pcomp,
 		int accomp)
 {
-    if (mru > MAX_PPPOE_MTU)
-	warn("Couldn't increase MRU to %d", mru);
+/*    if (mru > MAX_PPPOE_MTU)
+	warn("Couldn't increase MRU to %d", mru); */
 }
 
 /**********************************************************************
