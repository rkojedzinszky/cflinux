commit ab0c13928f5dcc92d4848bb26f7e52232a2d3d10
Author: root <root@krichy.tvnetwork.hu>
Date:   Fri Aug 29 15:40:46 2008 +0200

    {tcp,udp}_blackhole implemented

diff --git a/include/net/tcp.h b/include/net/tcp.h
index cf54034..cc87e68 100644
--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@ -224,6 +224,7 @@ extern int sysctl_tcp_tw_reuse;
 extern int sysctl_tcp_frto;
 extern int sysctl_tcp_frto_response;
 extern int sysctl_tcp_low_latency;
+extern int sysctl_tcp_blackhole;
 extern int sysctl_tcp_dma_copybreak;
 extern int sysctl_tcp_nometrics_save;
 extern int sysctl_tcp_moderate_rcvbuf;
diff --git a/include/net/udp.h b/include/net/udp.h
index ccce837..6faed33 100644
--- a/include/net/udp.h
+++ b/include/net/udp.h
@@ -71,6 +71,7 @@ extern atomic_t udp_memory_allocated;
 extern int sysctl_udp_mem[3];
 extern int sysctl_udp_rmem_min;
 extern int sysctl_udp_wmem_min;
+extern int sysctl_udp_blackhole;
 
 struct sk_buff;
 
diff --git a/net/ipv4/sysctl_net_ipv4.c b/net/ipv4/sysctl_net_ipv4.c
index c437f80..55560cf 100644
--- a/net/ipv4/sysctl_net_ipv4.c
+++ b/net/ipv4/sysctl_net_ipv4.c
@@ -586,6 +586,14 @@ static struct ctl_table ipv4_table[] = {
 		.proc_handler	= &proc_dointvec
 	},
 	{
+		.ctl_name	= CTL_UNNUMBERED,
+		.procname	= "tcp_blackhole",
+		.data		= &sysctl_tcp_blackhole,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec
+	},
+	{
 		.ctl_name	= NET_TCP_NO_METRICS_SAVE,
 		.procname	= "tcp_no_metrics_save",
 		.data		= &sysctl_tcp_nometrics_save,
@@ -753,6 +761,14 @@ static struct ctl_table ipv4_table[] = {
 		.strategy	= &sysctl_intvec,
 		.extra1		= &zero
 	},
+	{
+		.ctl_name	= CTL_UNNUMBERED,
+		.procname	= "udp_blackhole",
+		.data		= &sysctl_udp_blackhole,
+		.maxlen		= sizeof(sysctl_udp_blackhole),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec
+	},
 	{ .ctl_name = 0 }
 };
 
diff --git a/net/ipv4/tcp_ipv4.c b/net/ipv4/tcp_ipv4.c
index cd188dc..bc41dac 100644
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@ -85,6 +85,7 @@
 
 int sysctl_tcp_tw_reuse __read_mostly;
 int sysctl_tcp_low_latency __read_mostly;
+int sysctl_tcp_blackhole __read_mostly;
 
 
 #ifdef CONFIG_TCP_MD5SIG
@@ -542,6 +543,10 @@ static void tcp_v4_send_reset(struct sock *sk, struct sk_buff *skb)
 	struct tcp_md5sig_key *key;
 #endif
 
+	/* Never send a reset if blackhole is turned on. */
+	if (sysctl_tcp_blackhole)
+		return;
+
 	/* Never send a reset in response to a reset. */
 	if (th->rst)
 		return;
--- linux-2.6.31.6/net/ipv4/udp.c.orig	2009-11-10 00:32:31.000000000 +0000
+++ linux-2.6.31.6/net/ipv4/udp.c	2009-11-14 21:10:51.000000000 +0000
@@ -112,6 +112,7 @@
 int sysctl_udp_mem[3] __read_mostly;
 int sysctl_udp_rmem_min __read_mostly;
 int sysctl_udp_wmem_min __read_mostly;
+int sysctl_udp_blackhole __read_mostly;
 
 EXPORT_SYMBOL(sysctl_udp_mem);
 EXPORT_SYMBOL(sysctl_udp_rmem_min);
@@ -1293,7 +1294,8 @@
 		goto csum_error;
 
 	UDP_INC_STATS_BH(net, UDP_MIB_NOPORTS, proto == IPPROTO_UDPLITE);
-	icmp_send(skb, ICMP_DEST_UNREACH, ICMP_PORT_UNREACH, 0);
+	if (!sysctl_udp_blackhole)
+		icmp_send(skb, ICMP_DEST_UNREACH, ICMP_PORT_UNREACH, 0);
 
 	/*
 	 * Hmm.  We got an UDP packet to a port to which we
