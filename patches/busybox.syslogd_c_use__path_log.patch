--- busybox-1.8.1/sysklogd/syslogd.c.orig	2007-11-23 16:43:50.000000000 +0100
+++ busybox-1.8.1/sysklogd/syslogd.c	2007-11-23 16:45:36.000000000 +0100
@@ -491,12 +491,12 @@
 
 	memset(&sunx, 0, sizeof(sunx));
 	sunx.sun_family = AF_UNIX;
-	strcpy(sunx.sun_path, "/dev/log");
+	strcpy(sunx.sun_path, _PATH_LOG);
 
 	/* Unlink old /dev/log or object it points to. */
 	/* (if it exists, bind will fail) */
 	logmode = LOGMODE_NONE;
-	dev_log_name = xmalloc_readlink_or_warn("/dev/log");
+	dev_log_name = xmalloc_readlink_or_warn(_PATH_LOG);
 	logmode = LOGMODE_STDIO;
 	if (dev_log_name) {
 		int fd = xopen(".", O_NONBLOCK);
@@ -508,14 +508,14 @@
 		safe_strncpy(sunx.sun_path, dev_log_name, sizeof(sunx.sun_path));
 		free(dev_log_name);
 	} else {
-		unlink("/dev/log");
+		unlink(_PATH_LOG);
 	}
 
 	sock_fd = xsocket(AF_UNIX, SOCK_DGRAM, 0);
 	xbind(sock_fd, (struct sockaddr *) &sunx, sizeof(sunx));
 
-	if (chmod("/dev/log", 0666) < 0) {
-		bb_perror_msg_and_die("cannot set permission on /dev/log");
+	if (chmod(_PATH_LOG, 0666) < 0) {
+		bb_perror_msg_and_die("cannot set permission on " _PATH_LOG);
 	}
 	if (ENABLE_FEATURE_IPC_SYSLOG && (option_mask32 & OPT_circularlog)) {
 		ipcsyslog_init();
@@ -529,7 +529,7 @@
  read_again:
 		sz = safe_read(sock_fd, G.recvbuf, MAX_READ - 1);
 		if (sz < 0) {
-			bb_perror_msg_and_die("read from /dev/log");
+			bb_perror_msg_and_die("read from " _PATH_LOG);
 		}
 
 		/* Drop trailing NULs (typically there is one NUL) */
