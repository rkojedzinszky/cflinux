diff --git a/include/net/ip_fib.h b/include/net/ip_fib.h
index 09ab0c9..b81117d 100644
--- a/include/net/ip_fib.h
+++ b/include/net/ip_fib.h
@@ -179,14 +179,23 @@ struct fib_table {
 
 #ifndef CONFIG_IP_MULTIPLE_TABLES
 
-extern struct fib_table *ip_fib_local_table;
 extern struct fib_table *ip_fib_main_table;
 
+#ifdef CONFIG_IP_FIB_HASH
+#define _tb_lookup fn_hash_lookup
+#endif
+#ifdef CONFIG_IP_FIB_TRIE
+#define _tb_lookup fn_trie_lookup
+#endif
+#ifdef CONFIG_IP_FIB_LEF
+#define _tb_lookup fn_lef_lookup
+#endif
+
+extern int _tb_lookup(struct fib_table *, const struct flowi *, struct fib_result *);
+
 static inline struct fib_table *fib_get_table(u32 id)
 {
-	if (id != RT_TABLE_LOCAL)
-		return ip_fib_main_table;
-	return ip_fib_local_table;
+	return ip_fib_main_table;
 }
 
 static inline struct fib_table *fib_new_table(u32 id)
@@ -196,8 +205,7 @@ static inline struct fib_table *fib_new_table(u32 id)
 
 static inline int fib_lookup(const struct flowi *flp, struct fib_result *res)
 {
-	if (ip_fib_local_table->tb_lookup(ip_fib_local_table, flp, res) &&
-	    ip_fib_main_table->tb_lookup(ip_fib_main_table, flp, res))
+	if (_tb_lookup(ip_fib_main_table, flp, res))
 		return -ENETUNREACH;
 	return 0;
 }
diff --git a/net/ipv4/fib_frontend.c b/net/ipv4/fib_frontend.c
index 444a56b..a0c1c34 100644
--- a/net/ipv4/fib_frontend.c
+++ b/net/ipv4/fib_frontend.c
@@ -51,7 +51,6 @@
 
 #ifndef CONFIG_IP_MULTIPLE_TABLES
 
-struct fib_table *ip_fib_local_table;
 struct fib_table *ip_fib_main_table;
 
 #define FIB_TABLE_HASHSZ 1
@@ -131,8 +130,12 @@ struct net_device * ip_dev_find(__be32 addr)
 	res.r = NULL;
 #endif
 
+#ifdef CONFIG_IP_MULTIPLE_TABLES
 	if (!ip_fib_local_table ||
 	    ip_fib_local_table->tb_lookup(ip_fib_local_table, &fl, &res))
+#else
+	if (ip_fib_main_table->tb_lookup(ip_fib_main_table, &fl, &res))
+#endif
 		return NULL;
 	if (res.type != RTN_LOCAL)
 		goto out;
@@ -160,14 +163,20 @@ unsigned inet_addr_type(__be32 addr)
 	res.r = NULL;
 #endif
 
+#ifdef CONFIG_IP_MULTIPLE_TABLES
 	if (ip_fib_local_table) {
 		ret = RTN_UNICAST;
 		if (!ip_fib_local_table->tb_lookup(ip_fib_local_table,
 						   &fl, &res)) {
+#else
+	if (!ip_fib_main_table->tb_lookup(ip_fib_main_table, &fl, &res)) {
+#endif
 			ret = res.type;
 			fib_res_put(&res);
 		}
+#ifdef CONFIG_IP_MULTIPLE_TABLES
 	}
+#endif
 	return ret;
 }
 
@@ -639,6 +648,7 @@ static void fib_magic(int cmd, int type, __be32 dst, int dst_len, struct in_ifad
 		.fc_nlflags = NLM_F_CREATE | NLM_F_APPEND,
 	};
 
+#ifdef CONFIG_IP_MULTIPLE_TABLES
 	if (type == RTN_UNICAST)
 		tb = fib_new_table(RT_TABLE_MAIN);
 	else
@@ -646,6 +656,9 @@ static void fib_magic(int cmd, int type, __be32 dst, int dst_len, struct in_ifad
 
 	if (tb == NULL)
 		return;
+#else
+	tb = ip_fib_main_table;
+#endif
 
 	cfg.fc_table = tb->tb_id;
 
@@ -918,8 +931,6 @@ void __init ip_fib_init(void)
 	for (i = 0; i < FIB_TABLE_HASHSZ; i++)
 		INIT_HLIST_HEAD(&fib_table_hash[i]);
 #ifndef CONFIG_IP_MULTIPLE_TABLES
-	ip_fib_local_table = fib_hash_init(RT_TABLE_LOCAL);
-	hlist_add_head_rcu(&ip_fib_local_table->tb_hlist, &fib_table_hash[0]);
 	ip_fib_main_table  = fib_hash_init(RT_TABLE_MAIN);
 	hlist_add_head_rcu(&ip_fib_main_table->tb_hlist, &fib_table_hash[0]);
 #else
diff --git a/net/ipv4/fib_hash.c b/net/ipv4/fib_hash.c
index a4949f9..6d6e19a 100644
--- a/net/ipv4/fib_hash.c
+++ b/net/ipv4/fib_hash.c
@@ -241,7 +241,10 @@ fn_new_zone(struct fn_hash *table, int z)
 	return fz;
 }
 
-static int
+#ifdef CONFIG_IP_MULTIPLE_TABLES
+static
+#endif
+int
 fn_hash_lookup(struct fib_table *tb, const struct flowi *flp, struct fib_result *res)
 {
 	int err;
diff --git a/net/ipv4/fib_lef.c b/net/ipv4/fib_lef.c
index b945f4f..45c7c3e 100644
--- a/net/ipv4/fib_lef.c
+++ b/net/ipv4/fib_lef.c
@@ -329,7 +329,10 @@ err:
 	return err;
 }
 
-static int
+#ifdef CONFIG_IP_MULTIPLE_TABLES
+static
+#endif
+int
 fn_lef_lookup(struct fib_table *tb, const struct flowi *flp, struct fib_result *res)
 {
 	lef_t			*ln;		// current lef node
diff --git a/net/ipv4/fib_trie.c b/net/ipv4/fib_trie.c
index 214c347..0580b18 100644
--- a/net/ipv4/fib_trie.c
+++ b/net/ipv4/fib_trie.c
@@ -1303,7 +1303,10 @@ static inline int check_leaf(struct trie *t, struct leaf *l,
 	return 1;
 }
 
-static int
+#ifdef CONFIG_IP_MULTIPLE_TABLES
+static
+#endif
+int
 fn_trie_lookup(struct fib_table *tb, const struct flowi *flp, struct fib_result *res)
 {
 	struct trie *t = (struct trie *) tb->tb_data;
