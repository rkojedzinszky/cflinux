--- busybox-1.1.2/include/usage.h.orig	2006-03-22 22:16:24.000000000 +0100
+++ busybox-1.1.2/include/usage.h	2006-04-26 19:22:18.000000000 +0200
@@ -2449,12 +2449,13 @@
 	"/root\n"
 
 #define rdate_trivial_usage \
-	"[-sp] HOST"
+	"[-spa] HOST"
 #define rdate_full_usage \
 	"Get and possibly set the system date and time from a remote HOST.\n\n" \
 	"Options:\n" \
 	"\t-s\tSet the system date and time (default)\n" \
-	"\t-p\tPrint the date and time"
+	"\t-p\tPrint the date and time\n" \
+	"\t-a\tSkew the time instead of just hopping it."
 
 #ifdef CONFIG_FEATURE_READLINK_FOLLOW
 #define USAGE_READLINK_FOLLOW(a) a
--- busybox-1.1.2/util-linux/rdate.c.orig	2006-03-22 22:16:26.000000000 +0100
+++ busybox-1.1.2/util-linux/rdate.c	2006-04-26 19:21:15.000000000 +0200
@@ -65,7 +65,7 @@
 	unsigned long flags;
 
 	bb_opt_complementally = "-1";
-	flags = bb_getopt_ulflags(argc, argv, "sp");
+	flags = bb_getopt_ulflags(argc, argv, "spa");
 
 	remote_time = askremotedate(argv[optind]);
 
@@ -75,8 +75,11 @@
 		time(&current_time);
 		if (current_time == remote_time)
 			bb_error_msg("Current time matches remote time.");
-		else
-			if (stime(&remote_time) < 0)
+		else if (flags & 4) {
+			struct timeval tv = { .tv_sec = remote_time - current_time, .tv_usec = 0 };
+			if (adjtime(&tv, NULL) == -1)
+				bb_perror_msg_and_die("Could not adjust time of day");
+		} else if (stime(&remote_time) < 0)
 				bb_perror_msg_and_die("Could not set time of day");
 
 	/* No need to check for the -p flag as it's the only option left */
